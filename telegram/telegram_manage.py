from DatabaseAssistant import request
from main import main_queue
from typing import Optional
from aiogram.types.message import Message


async def start(message: Message):
	"""–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ—á–µ—Ä–µ–¥—å"""

	main_queue.on_new_user(message.from_id)

	await message.reply(
			"–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—à–ª–∏ –≤ –æ—á–µ—Ä–µ–¥—å, –æ–∂–∏–¥–∞–π—Ç–µ —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —ç—Ç–æ–º —á–∞—Ç–µ! –ù–∞–ø–æ–º–∏–Ω–∞—é, –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ –Ω–µ –±—É–¥–µ—Ç –¥–æ–ª–≥–æ –≤–∞—Å –∂–¥–∞—Ç—å"
	)


async def profile(message: Message):
	"""–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

	stats_values = await (
		await request(
			"SELECT games, points FROM users WHERE user_id = ?",
			(message.from_id, ))
		).fetchone()

	await message.reply(f"""–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å üìäüìà:
						–û—Å—Ç–∞–ª–æ—Å—å –∏–≥—Ä: {stats_values[0]} ‚öîÔ∏è
						–û—á–∫–æ–≤: {stats_values[1]} üí†""")


async def queue_leave(message: Message):
	"""–£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –æ—á–µ—Ä–µ–¥–∏"""

	main_queue.leave_from_queue(message.from_id)

	await message.reply("–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–∫–∏–Ω—É–ª–∏ –æ—á–µ—Ä–µ–¥—å!")


async def get_top(message: Message, amount: Optional[int] = None):

	top = await (await request("SELECT user_id, points FROM users ORDER BY points DESC")).fetchall()

	if not amount:
		amount = len(top)

	send_message: str = f"üèÜ‚≠êÔ∏è –¢–æ–ø {amount} –ø–æ –ø–æ–±–µ–¥–∞–º –≤ —à–∞—Ö–º–∞—Ç–∞—Ö: "

	try:
		for player in top[:amount+1]:
			player_name = message.get_
			send_message = send_message + f""

	except IndexError:
		await message.reply(f"–í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤! (–í—Å–µ–≥–æ {len(top)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)")



